/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BACKEND.CLASS.ObatAlat;
import BACKEND.CLASS.Ruangan;
import BACKEND.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ivalshamkya
 */
public class PegawaiPage extends javax.swing.JFrame {

    private Connection conn;

    public PegawaiPage() {
        initComponents();
        panel1.setVisible(true);
        loadPatientDataFromDatabase();

        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        layeredPane = new javax.swing.JLayeredPane();
        panel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePasien = new javax.swing.JTable();
        panel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableObat = new javax.swing.JTable();
        tfObatNama = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfObatJenis = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfObatJumlah = new javax.swing.JTextField();
        btnObatSimpan = new javax.swing.JButton();
        btnObatHapus = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        tfObatID = new javax.swing.JTextField();
        btnObatReset = new javax.swing.JButton();
        panel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableRuang = new javax.swing.JTable();
        tfRuangNama = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tfRuangJenis = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        tfRuangKetersediaan = new javax.swing.JTextField();
        btnRuangSimpan = new javax.swing.JButton();
        btnRuangHapus = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        tfRuangID = new javax.swing.JTextField();
        btnRuangReset = new javax.swing.JButton();
        panelReservasi = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableReservasi = new javax.swing.JTable();
        btnReservasiKonfirmasi = new javax.swing.JButton();
        btnRuangHapus1 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        tfReservasiID = new javax.swing.JTextField();
        btnRuangReset1 = new javax.swing.JButton();
        panelTagihan = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablePembayaran = new javax.swing.JTable();
        btnBuatTagihan = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        tfTotalBayar = new javax.swing.JTextField();
        cbReservasiID = new javax.swing.JComboBox<>();
        panelLaporan = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tableTransaksi = new javax.swing.JTable();
        btnFilterLaporan = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        tfEndDate = new javax.swing.JTextField();
        tfStartDate = new javax.swing.JTextField();
        labelPemasukan = new javax.swing.JLabel();
        panelRiwayatResep = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableRiwayatResep = new javax.swing.JTable();
        btnBuatRiwayatResep = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cbRiwayatResepID = new javax.swing.JComboBox<>();
        cbRiwayatResepObat = new javax.swing.JComboBox<>();
        panelCatatanMedis = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableCM = new javax.swing.JTable();
        tfHasilPemeriksaan = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        tfDiagnosis = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        tfPengobatan = new javax.swing.JTextField();
        btnCMSimpan = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        cbCMID = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuHome = new javax.swing.JMenuItem();
        menuPasien = new javax.swing.JMenuItem();
        menuObat = new javax.swing.JMenuItem();
        menuRiwayatResep = new javax.swing.JMenuItem();
        menuRuang = new javax.swing.JMenuItem();
        menuPembayaran = new javax.swing.JMenuItem();
        menuLaporan = new javax.swing.JMenuItem();
        menuRekamMedis = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuReservasi = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menuLogout = new javax.swing.JMenuItem();

        setBackground(new java.awt.Color(255, 255, 255));
        setSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        layeredPane.setPreferredSize(new java.awt.Dimension(800, 500));
        layeredPane.setSize(new java.awt.Dimension(800, 500));

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel2.setText("Welcome");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layeredPane.add(panel1);
        panel1.setBounds(0, 0, 0, 0);

        panel2.setBackground(new java.awt.Color(255, 255, 255));
        panel2.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setText("Data Pasien");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel3.setText("Management Data Pasien");

        tablePasien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablePasien.setSize(new java.awt.Dimension(452, 80));
        jScrollPane1.setViewportView(tablePasien);

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 169, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        layeredPane.add(panel2);
        panel2.setBounds(0, 0, 800, 510);

        panel3.setBackground(new java.awt.Color(255, 255, 255));
        panel3.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel4.setText("Data Obat dan Alat Medis");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel5.setText("Management Data Obat dan Alat Medis");

        tableObat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableObat.setSize(new java.awt.Dimension(452, 80));
        jScrollPane2.setViewportView(tableObat);

        tfObatNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfObatNamaActionPerformed(evt);
            }
        });

        jLabel6.setText("Nama Obat/Alat");

        jLabel7.setText("Jenis (obat/alat)");

        tfObatJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfObatJenisActionPerformed(evt);
            }
        });

        jLabel8.setText("Jumlah");

        tfObatJumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfObatJumlahActionPerformed(evt);
            }
        });

        btnObatSimpan.setText("Simpan");
        btnObatSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObatSimpanActionPerformed(evt);
            }
        });

        btnObatHapus.setText("Hapus");
        btnObatHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObatHapusActionPerformed(evt);
            }
        });

        jLabel9.setText("ID");

        tfObatID.setEnabled(false);
        tfObatID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfObatIDActionPerformed(evt);
            }
        });

        btnObatReset.setText("Reset");
        btnObatReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObatResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(tfObatNama)
                                .addGap(6, 6, 6))
                            .addComponent(tfObatJenis)
                            .addComponent(tfObatJumlah)
                            .addComponent(tfObatID)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(btnObatHapus)
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addComponent(btnObatSimpan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnObatReset)))
                                .addGap(0, 10, Short.MAX_VALUE)))
                        .addGap(19, 19, 19)))
                .addContainerGap())
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfObatID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfObatNama, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfObatJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfObatJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnObatSimpan)
                            .addComponent(btnObatReset))
                        .addGap(18, 18, 18)
                        .addComponent(btnObatHapus)))
                .addContainerGap())
        );

        layeredPane.add(panel3);
        panel3.setBounds(0, 0, 800, 510);

        panel4.setBackground(new java.awt.Color(255, 255, 255));
        panel4.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel10.setText("Data Ruangan");

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel11.setText("Management Data Ruangan");

        tableRuang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableRuang.setSize(new java.awt.Dimension(452, 80));
        jScrollPane3.setViewportView(tableRuang);

        tfRuangNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRuangNamaActionPerformed(evt);
            }
        });

        jLabel12.setText("Nama");

        jLabel13.setText("Jenis");

        tfRuangJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRuangJenisActionPerformed(evt);
            }
        });

        jLabel14.setText("Ketersediaan");

        tfRuangKetersediaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRuangKetersediaanActionPerformed(evt);
            }
        });

        btnRuangSimpan.setText("Simpan");
        btnRuangSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRuangSimpanActionPerformed(evt);
            }
        });

        btnRuangHapus.setText("Hapus");
        btnRuangHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRuangHapusActionPerformed(evt);
            }
        });

        jLabel15.setText("ID");

        tfRuangID.setEnabled(false);
        tfRuangID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRuangIDActionPerformed(evt);
            }
        });

        btnRuangReset.setText("Reset");
        btnRuangReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRuangResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(panel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel4Layout.createSequentialGroup()
                                .addComponent(tfRuangNama)
                                .addGap(6, 6, 6))
                            .addComponent(tfRuangJenis)
                            .addComponent(tfRuangKetersediaan)
                            .addComponent(tfRuangID)
                            .addGroup(panel4Layout.createSequentialGroup()
                                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(btnRuangHapus)
                                    .addGroup(panel4Layout.createSequentialGroup()
                                        .addComponent(btnRuangSimpan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnRuangReset)))
                                .addGap(0, 10, Short.MAX_VALUE)))
                        .addGap(19, 19, 19)))
                .addContainerGap())
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRuangID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRuangNama, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRuangJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfRuangKetersediaan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRuangSimpan)
                            .addComponent(btnRuangReset))
                        .addGap(18, 18, 18)
                        .addComponent(btnRuangHapus)))
                .addContainerGap())
        );

        layeredPane.add(panel4);
        panel4.setBounds(0, 0, 800, 510);

        panelReservasi.setBackground(new java.awt.Color(255, 255, 255));
        panelReservasi.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel16.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel16.setText("Data Reservasi");

        jLabel17.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel17.setText("Management Data Reservasi");

        tableReservasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableReservasi.setSize(new java.awt.Dimension(452, 80));
        jScrollPane4.setViewportView(tableReservasi);

        btnReservasiKonfirmasi.setText("Konfirmasi");
        btnReservasiKonfirmasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservasiKonfirmasiActionPerformed(evt);
            }
        });

        btnRuangHapus1.setText("Hapus");
        btnRuangHapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRuangHapus1ActionPerformed(evt);
            }
        });

        jLabel21.setText("ID");

        tfReservasiID.setEnabled(false);
        tfReservasiID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfReservasiIDActionPerformed(evt);
            }
        });

        btnRuangReset1.setText("Reset");
        btnRuangReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRuangReset1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelReservasiLayout = new javax.swing.GroupLayout(panelReservasi);
        panelReservasi.setLayout(panelReservasiLayout);
        panelReservasiLayout.setHorizontalGroup(
            panelReservasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReservasiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelReservasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelReservasiLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelReservasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21)
                            .addGroup(panelReservasiLayout.createSequentialGroup()
                                .addComponent(btnRuangHapus1)
                                .addGap(18, 18, 18)
                                .addComponent(btnRuangReset1))
                            .addComponent(btnReservasiKonfirmasi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfReservasiID))
                        .addGap(0, 19, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelReservasiLayout.setVerticalGroup(
            panelReservasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReservasiLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelReservasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelReservasiLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfReservasiID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReservasiKonfirmasi, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelReservasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRuangHapus1)
                            .addComponent(btnRuangReset1))))
                .addContainerGap())
        );

        layeredPane.add(panelReservasi);
        panelReservasi.setBounds(0, 0, 800, 510);

        panelTagihan.setBackground(new java.awt.Color(255, 255, 255));
        panelTagihan.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel18.setText("Data Pembayaran");

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel19.setText("Management Data Pembayaran");

        tablePembayaran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablePembayaran.setSize(new java.awt.Dimension(452, 80));
        jScrollPane5.setViewportView(tablePembayaran);

        btnBuatTagihan.setText("Buat Tagihan");
        btnBuatTagihan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuatTagihanActionPerformed(evt);
            }
        });

        jLabel22.setText("ID Reservasi");

        jLabel23.setText("Total Bayar");

        tfTotalBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTotalBayarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTagihanLayout = new javax.swing.GroupLayout(panelTagihan);
        panelTagihan.setLayout(panelTagihanLayout);
        panelTagihanLayout.setHorizontalGroup(
            panelTagihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTagihanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTagihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelTagihanLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelTagihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel22)
                            .addComponent(btnBuatTagihan)
                            .addComponent(jLabel23)
                            .addComponent(tfTotalBayar)
                            .addComponent(cbReservasiID, 0, 167, Short.MAX_VALUE))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelTagihanLayout.setVerticalGroup(
            panelTagihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTagihanLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTagihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelTagihanLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbReservasiID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTotalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuatTagihan)))
                .addContainerGap())
        );

        layeredPane.add(panelTagihan);
        panelTagihan.setBounds(0, 0, 800, 510);

        panelLaporan.setBackground(new java.awt.Color(255, 255, 255));
        panelLaporan.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel27.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel27.setText("Data Laporan Keuangan");

        jLabel28.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel28.setText("Management Data Laporan Keuangan");

        tableTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableTransaksi.setSize(new java.awt.Dimension(452, 80));
        jScrollPane7.setViewportView(tableTransaksi);

        btnFilterLaporan.setText("Filter");
        btnFilterLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterLaporanActionPerformed(evt);
            }
        });

        jLabel29.setText("Tanggal Mulai (YYYY-MM-DD)");

        jLabel30.setText("Tanggal Akhir (YYYY-MM-DD)");

        tfEndDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEndDateActionPerformed(evt);
            }
        });

        labelPemasukan.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        labelPemasukan.setText("Total Pemasukan: 0");

        javax.swing.GroupLayout panelLaporanLayout = new javax.swing.GroupLayout(panelLaporan);
        panelLaporan.setLayout(panelLaporanLayout);
        panelLaporanLayout.setHorizontalGroup(
            panelLaporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLaporanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLaporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelLaporanLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelLaporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel29)
                            .addComponent(btnFilterLaporan)
                            .addComponent(jLabel30)
                            .addComponent(tfEndDate)
                            .addComponent(tfStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 27, Short.MAX_VALUE))
                    .addComponent(labelPemasukan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelLaporanLayout.setVerticalGroup(
            panelLaporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLaporanLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLaporanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLaporanLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(2, 2, 2)
                        .addComponent(tfStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFilterLaporan))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelPemasukan)
                .addContainerGap())
        );

        layeredPane.add(panelLaporan);
        panelLaporan.setBounds(0, 0, 800, 510);

        panelRiwayatResep.setBackground(new java.awt.Color(255, 255, 255));
        panelRiwayatResep.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel20.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel20.setText("Data Riwayat Resep");

        jLabel24.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel24.setText("Management Data Pembayaran");

        tableRiwayatResep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableRiwayatResep.setSize(new java.awt.Dimension(452, 80));
        jScrollPane6.setViewportView(tableRiwayatResep);

        btnBuatRiwayatResep.setText("Simpan");
        btnBuatRiwayatResep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuatRiwayatResepActionPerformed(evt);
            }
        });

        jLabel25.setText("ID Reservasi");

        jLabel26.setText("Obat");

        javax.swing.GroupLayout panelRiwayatResepLayout = new javax.swing.GroupLayout(panelRiwayatResep);
        panelRiwayatResep.setLayout(panelRiwayatResepLayout);
        panelRiwayatResepLayout.setHorizontalGroup(
            panelRiwayatResepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRiwayatResepLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRiwayatResepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelRiwayatResepLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRiwayatResepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel25)
                            .addComponent(btnBuatRiwayatResep)
                            .addComponent(jLabel26)
                            .addComponent(cbRiwayatResepID, 0, 167, Short.MAX_VALUE)
                            .addComponent(cbRiwayatResepObat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelRiwayatResepLayout.setVerticalGroup(
            panelRiwayatResepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRiwayatResepLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelRiwayatResepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelRiwayatResepLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbRiwayatResepID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbRiwayatResepObat, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuatRiwayatResep)))
                .addContainerGap())
        );

        layeredPane.add(panelRiwayatResep);
        panelRiwayatResep.setBounds(0, 0, 800, 510);

        panelCatatanMedis.setBackground(new java.awt.Color(255, 255, 255));
        panelCatatanMedis.setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel31.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel31.setText("Data Catatan Medis");

        jLabel32.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel32.setText("Management Data Catatan Medis");

        tableCM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableCM.setSize(new java.awt.Dimension(452, 80));
        jScrollPane8.setViewportView(tableCM);

        tfHasilPemeriksaan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHasilPemeriksaanActionPerformed(evt);
            }
        });

        jLabel33.setText("Hasil Pemeriksaan");

        jLabel34.setText("Diagnosis");

        tfDiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDiagnosisActionPerformed(evt);
            }
        });

        jLabel35.setText("Pengobatan");

        tfPengobatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPengobatanActionPerformed(evt);
            }
        });

        btnCMSimpan.setText("Simpan");
        btnCMSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCMSimpanActionPerformed(evt);
            }
        });

        jLabel36.setText("ID");

        javax.swing.GroupLayout panelCatatanMedisLayout = new javax.swing.GroupLayout(panelCatatanMedis);
        panelCatatanMedis.setLayout(panelCatatanMedisLayout);
        panelCatatanMedisLayout.setHorizontalGroup(
            panelCatatanMedisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCatatanMedisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelCatatanMedisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                                .addGroup(panelCatatanMedisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                                        .addComponent(tfHasilPemeriksaan)
                                        .addGap(6, 6, 6))
                                    .addComponent(tfDiagnosis)
                                    .addComponent(tfPengobatan)
                                    .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                                        .addGroup(panelCatatanMedisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel36)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel34)
                                            .addComponent(jLabel35)
                                            .addComponent(btnCMSimpan))
                                        .addGap(0, 54, Short.MAX_VALUE)))
                                .addGap(19, 19, 19))
                            .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                                .addComponent(cbCMID, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panelCatatanMedisLayout.setVerticalGroup(
            panelCatatanMedisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCatatanMedisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelCatatanMedisLayout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addGap(2, 2, 2)
                        .addComponent(cbCMID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfHasilPemeriksaan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfPengobatan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCMSimpan)))
                .addContainerGap())
        );

        layeredPane.add(panelCatatanMedis);
        panelCatatanMedis.setBounds(0, 0, 800, 510);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 812, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(layeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 524, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(layeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(18, Short.MAX_VALUE)))
        );

        jMenu1.setText("Manage");

        menuHome.setText("Dashboard");
        menuHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHomeActionPerformed(evt);
            }
        });
        jMenu1.add(menuHome);

        menuPasien.setText("Pasien");
        menuPasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPasienActionPerformed(evt);
            }
        });
        jMenu1.add(menuPasien);

        menuObat.setText("Obat");
        menuObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuObatActionPerformed(evt);
            }
        });
        jMenu1.add(menuObat);

        menuRiwayatResep.setText("Riwayat Resep");
        menuRiwayatResep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRiwayatResepActionPerformed(evt);
            }
        });
        jMenu1.add(menuRiwayatResep);

        menuRuang.setText("Ruang Perawatan");
        menuRuang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRuangActionPerformed(evt);
            }
        });
        jMenu1.add(menuRuang);

        menuPembayaran.setText("Pembayaran");
        menuPembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPembayaranActionPerformed(evt);
            }
        });
        jMenu1.add(menuPembayaran);

        menuLaporan.setText("Laporan Keuangan");
        menuLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLaporanActionPerformed(evt);
            }
        });
        jMenu1.add(menuLaporan);

        menuRekamMedis.setText("Catatan Medis");
        menuRekamMedis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRekamMedisActionPerformed(evt);
            }
        });
        jMenu1.add(menuRekamMedis);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Reservasi");

        menuReservasi.setText("Reservasi");
        menuReservasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuReservasiActionPerformed(evt);
            }
        });
        jMenu2.add(menuReservasi);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Logout");

        menuLogout.setText("Logout");
        menuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogoutActionPerformed(evt);
            }
        });
        jMenu3.add(menuLogout);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menuHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHomeActionPerformed
        // TODO add your handling code here:
        panel1.setVisible(true);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);
    }//GEN-LAST:event_menuHomeActionPerformed

    private void menuPasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPasienActionPerformed
        // TODO add your handling code here:
        loadPatientDataFromDatabase();
        panel1.setVisible(false);
        panel2.setVisible(true);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);
    }//GEN-LAST:event_menuPasienActionPerformed

    private void menuObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuObatActionPerformed
        // TODO add your handling code here:
        loadObatDataFromDatabase();
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(true);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);
    }//GEN-LAST:event_menuObatActionPerformed

    private void tfObatNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfObatNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfObatNamaActionPerformed

    private void tfObatJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfObatJenisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfObatJenisActionPerformed

    private void tfObatJumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfObatJumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfObatJumlahActionPerformed

    private void tfObatIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfObatIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfObatIDActionPerformed

    private void btnObatSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObatSimpanActionPerformed
        // TODO add your handling code here:
        try {
            String id = this.tfObatID.getText();
            String nama = this.tfObatNama.getText();
            String jenis = this.tfObatJenis.getText();
            int jumlah = Integer.parseInt(this.tfObatJumlah.getText());

            boolean isSuccess = false;

            if (id.length() > 0) {
                ObatAlat oa = new ObatAlat(id, nama, jenis, jumlah);
                isSuccess = oa.update();
            } else {
                ObatAlat oa = new ObatAlat(null, nama, jenis, jumlah);
                isSuccess = oa.insert();
            }

            if (isSuccess) {
                loadObatDataFromDatabase();
                resetObatTF();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
            } else {
                JOptionPane.showMessageDialog(null, "Data gagal disimpan!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginPasien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnObatSimpanActionPerformed

    private void btnObatResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObatResetActionPerformed
        // TODO add your handling code here:
        resetObatTF();
    }//GEN-LAST:event_btnObatResetActionPerformed

    private void btnObatHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObatHapusActionPerformed
        // TODO add your handling code here:
        try {
            String id = this.tfObatID.getText();
            if (id != null) {
                String nama = this.tfObatNama.getText();
                String jenis = this.tfObatJenis.getText();
                int jumlah = Integer.parseInt(this.tfObatJumlah.getText());
                ObatAlat oa = new ObatAlat(id, nama, jenis, jumlah);

                int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this data?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    boolean isSuccess = oa.delete();

                    if (isSuccess) {
                        loadObatDataFromDatabase();
                        resetObatTF();
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Data gagal dihapus!");
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginPasien.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnObatHapusActionPerformed

    private void tfRuangNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRuangNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRuangNamaActionPerformed

    private void tfRuangJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRuangJenisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRuangJenisActionPerformed

    private void tfRuangKetersediaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRuangKetersediaanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRuangKetersediaanActionPerformed

    private void btnRuangSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRuangSimpanActionPerformed
        // TODO add your handling code here:
        try {
            String id = this.tfRuangID.getText();
            String nama = this.tfRuangNama.getText();
            String jenis = this.tfRuangJenis.getText();
            String ketersediaan = this.tfRuangKetersediaan.getText();

            boolean isSuccess = false;

            if (id.length() > 0) {
                Ruangan ru = new Ruangan(id, nama, jenis, ketersediaan);
                isSuccess = ru.update();
            } else {
                Ruangan ru = new Ruangan(null, nama, jenis, ketersediaan);
                isSuccess = ru.insert();
            }

            if (isSuccess) {
                System.out.println("Berhasil simpan data!");
                loadRuangDataFromDatabase();
                resetRuangTF();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
            } else {
                // Show an error message or take appropriate action on login failure
                JOptionPane.showMessageDialog(null, "Data gagal disimpan!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginPasien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRuangSimpanActionPerformed

    private void btnRuangHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRuangHapusActionPerformed
        // TODO add your handling code here:        
        try {
            String id = this.tfRuangID.getText();
            if (id != null) {
                String nama = this.tfRuangNama.getText();
                String jenis = this.tfRuangJenis.getText();
                String ketersediaan = this.tfRuangKetersediaan.getText();
                Ruangan ru = new Ruangan(id, nama, jenis, ketersediaan);

                // Ask for confirmation before deletion
                int option = JOptionPane.showConfirmDialog(null, "Apakah anda yakin untuk hapus data ini?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    boolean isSuccess = ru.delete();

                    if (isSuccess) {
                        System.out.println("Berhasil hapus data obat/alat!");
                        loadRuangDataFromDatabase();
                        resetRuangTF();
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                    } else {
                        // Show an error message or take appropriate action on deletion failure
                        JOptionPane.showMessageDialog(null, "Data gagal dihapus!");
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginPasien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRuangHapusActionPerformed

    private void tfRuangIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRuangIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRuangIDActionPerformed

    private void btnRuangResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRuangResetActionPerformed
        // TODO add your handling code here:
        resetRuangTF();
    }//GEN-LAST:event_btnRuangResetActionPerformed

    private void menuLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLaporanActionPerformed
        // TODO add your handling code here:
        loadLaporanDataFromDatabase("", "");
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(true);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);
    }//GEN-LAST:event_menuLaporanActionPerformed

    private void menuRuangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRuangActionPerformed
        // TODO add your handling code here:
        loadRuangDataFromDatabase();
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(true);
        panelReservasi.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);
    }//GEN-LAST:event_menuRuangActionPerformed

    private void btnReservasiKonfirmasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservasiKonfirmasiActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(this.tfReservasiID.getText());
            String query = "UPDATE `Reservasi`SET `status`='1' WHERE `id_reservasi` = ?";
            try (PreparedStatement preparedStatement = conn.prepareStatement(query)) {
                preparedStatement.setInt(1, id);
                int option = JOptionPane.showConfirmDialog(null, "Konfirmasi keberadaan pasien?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (option == JOptionPane.YES_OPTION) {
                    int rowAffected = preparedStatement.executeUpdate();

                    if (rowAffected > 0) {
                        loadReservasiDataFromDatabase();
                        this.tfReservasiID.setText("");
                        JOptionPane.showMessageDialog(null, "Keberadaan pasien di konfirmasi!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Keberadaan pasien gagal di konfirmasi!");
                    }
                }
                conn.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnReservasiKonfirmasiActionPerformed

    private void btnRuangHapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRuangHapus1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRuangHapus1ActionPerformed

    private void tfReservasiIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfReservasiIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfReservasiIDActionPerformed

    private void btnRuangReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRuangReset1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRuangReset1ActionPerformed

    private void menuReservasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReservasiActionPerformed
        // TODO add your handling code here:
        loadReservasiDataFromDatabase();
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(true);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);

    }//GEN-LAST:event_menuReservasiActionPerformed

    private void btnBuatTagihanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuatTagihanActionPerformed
        // TODO add your handling code here:
        try {
            String id = this.cbReservasiID.getSelectedItem().toString();
            int bayar = Integer.parseInt(this.tfTotalBayar.getText());

            String query = "INSERT INTO `Pembayaran`(`id_reservasi`, `jumlah`) "
                    + "VALUES (?,?)";
            try (PreparedStatement preparedStatement = conn.prepareStatement(query)) {
                preparedStatement.setString(1, id);
                preparedStatement.setInt(2, bayar);

                int rowAffected = preparedStatement.executeUpdate();

                if (rowAffected > 0) {
                    loadCBReservasiDataFromDatabase();
                    this.tfTotalBayar.setText("");
                    JOptionPane.showMessageDialog(null, "Tagihan berhasil dibuat!");
                } else {
                    JOptionPane.showMessageDialog(null, "Tagihan gagal dibuat!");
                }
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginPasien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuatTagihanActionPerformed

    private void tfTotalBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTotalBayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTotalBayarActionPerformed

    private void menuPembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPembayaranActionPerformed
        // TODO add your handling code here:
        loadCBReservasiDataFromDatabase();
        loadPembayaranDataFromDatabase();
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(true);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(false);
    }//GEN-LAST:event_menuPembayaranActionPerformed

    private void menuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogoutActionPerformed
        // TODO add your handling code here:
        new MainPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuLogoutActionPerformed

    private void btnFilterLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterLaporanActionPerformed
        // TODO add your handling code here:
        String start = this.tfStartDate.getText();
        String end = this.tfEndDate.getText();
        loadLaporanDataFromDatabase(start, end);
    }//GEN-LAST:event_btnFilterLaporanActionPerformed

    private void tfEndDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEndDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEndDateActionPerformed

    private void menuRiwayatResepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRiwayatResepActionPerformed
        // TODO add your handling code here:
        loadCBReservasiRWDataFromDatabase();
        loadRSDataFromDatabase();
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(true);
        panelCatatanMedis.setVisible(false);
    }//GEN-LAST:event_menuRiwayatResepActionPerformed

    private void btnBuatRiwayatResepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuatRiwayatResepActionPerformed
        // TODO add your handling code here:
        try {
            String id = this.cbRiwayatResepID.getSelectedItem().toString();
            String obat = this.cbRiwayatResepObat.getSelectedItem().toString();
            
            String query = "INSERT INTO `RiwayatResep`(`id_reservasi`, `obat`) "
                    + "VALUES (?,?)";
            try (PreparedStatement preparedStatement = conn.prepareStatement(query)) {
                preparedStatement.setInt(1, Integer.parseInt(id));
                preparedStatement.setString(2, obat);

                int rowAffected = preparedStatement.executeUpdate();

                if (rowAffected > 0) {
                    loadCBReservasiRWDataFromDatabase();
                    loadRSDataFromDatabase();
                    JOptionPane.showMessageDialog(null, "Riwayat Resep berhasil dibuat!");
                } else {
                    JOptionPane.showMessageDialog(null, "Riwayat Resep gagal dibuat!");
                }
                conn.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBuatRiwayatResepActionPerformed

    private void tfPengobatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPengobatanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPengobatanActionPerformed

    private void btnCMSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCMSimpanActionPerformed
        // TODO add your handling code here:
        try {
            String id = this.cbCMID.getSelectedItem().toString();
            String hasil = this.tfHasilPemeriksaan.getText();
            String diagnosis = this.tfDiagnosis.getText();
            String pengobatan = this.tfPengobatan.getText();
            String query = "INSERT INTO `CatatanMedisElektronik`(`id_reservasi`, `hasil_pemeriksaan`, `diagnosis`, `pengobatan`) "
                    + "VALUES (?,?,?,?)";
            try (PreparedStatement preparedStatement = conn.prepareStatement(query)) {
                preparedStatement.setInt(1, Integer.parseInt(id));
                preparedStatement.setString(2, hasil);
                preparedStatement.setString(3, diagnosis);
                preparedStatement.setString(4, pengobatan);

                int rowAffected = preparedStatement.executeUpdate();

                if (rowAffected > 0) {
                    resetCM();
                    loadCMDataFromDatabase();
                    JOptionPane.showMessageDialog(null, "Riwayat Resep berhasil dibuat!");
                } else {
                    JOptionPane.showMessageDialog(null, "Riwayat Resep gagal dibuat!");
                }
                conn.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnCMSimpanActionPerformed

    private void tfDiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDiagnosisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDiagnosisActionPerformed

    private void tfHasilPemeriksaanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHasilPemeriksaanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHasilPemeriksaanActionPerformed

    private void menuRekamMedisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRekamMedisActionPerformed
        // TODO add your handling code here:
        loadCMDataFromDatabase();
        loadCBReservasiCMDataFromDatabase();
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panelReservasi.setVisible(false);
        panelTagihan.setVisible(false);
        panelLaporan.setVisible(false);
        panelRiwayatResep.setVisible(false);
        panelCatatanMedis.setVisible(true);

    }//GEN-LAST:event_menuRekamMedisActionPerformed

    private void loadLaporanDataFromDatabase(String start, String end) {
        tableTransaksi.setModel(getLaporanDataFromDatabase(start, end));
    }

    private DefaultTableModel getLaporanDataFromDatabase(String start, String end) {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM Pembayaran as pb "
                    + "LEFT JOIN Reservasi as rv USING(id_reservasi) "
                    + "LEFT JOIN Pasien USING(id_pasien) "
                    + "LEFT JOIN Dokter USING(id_dokter) ";
            if(!start.equalsIgnoreCase("") && !end.equalsIgnoreCase(""))
            {
                query += "WHERE pb.tanggal BETWEEN ? AND ? ";
            }
            
            query += "ORDER BY pb.tanggal ASC";
            
            PreparedStatement statement = conn.prepareStatement(query);
            if(!start.equalsIgnoreCase("") && !end.equalsIgnoreCase(""))
            {
                statement.setString(1, start);
                statement.setString(2, end);
            }

            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Pembayaran");
            model.addColumn("Nama Pasien");
            model.addColumn("Nama Dokter");
            model.addColumn("Jumlah");
            model.addColumn("Metode Pembayaran");
            model.addColumn("Tanggal");
            model.addColumn("Status");
            
            int pemasukan = 0;
                    
            while (resultSet.next()) {
                if(resultSet.getString("pb.jumlah") != null) {
                    pemasukan += resultSet.getInt("pb.jumlah");
                }
                String metode = resultSet.getString("metode_pembayaran") != null ? resultSet.getString("metode_pembayaran") : "-";
                String status = metode.equalsIgnoreCase("-") ? "Belum Bayar" : "Sudah Bayar";
                Object[] row = {
                    resultSet.getInt("id_pembayaran"),
                    resultSet.getString("nama_pasien"),
                    resultSet.getString("nama_dokter"),
                    resultSet.getInt("pb.jumlah"),
                    metode,
                    resultSet.getString("tanggal"),
                    status,};
                model.addRow(row);
            }
            this.labelPemasukan.setText("Total Pemasukan: " + pemasukan);
            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void loadPatientDataFromDatabase() {
        tablePasien.setModel(getPatientDataFromDatabase());
    }

    private DefaultTableModel getPatientDataFromDatabase() {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM Pasien";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Pasien");
            model.addColumn("Nama Pasien");
            model.addColumn("Alamat");
            model.addColumn("No.Telp");
            model.addColumn("Tanggal Lahir");
            model.addColumn("Riwayat Penyakit");

            while (resultSet.next()) {
                Object[] row = {resultSet.getInt("id_pasien"), resultSet.getString("nama_pasien"), resultSet.getString("alamat"), resultSet.getString("nomor_telepon"), resultSet.getString("tanggal_lahir"), resultSet.getString("riwayat_penyakit")};
                model.addRow(row);
            }

            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }
    
    private void loadRSDataFromDatabase() {
        tableRiwayatResep.setModel(getRSDataFromDatabase());
    }

    private DefaultTableModel getRSDataFromDatabase() {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM RiwayatResep lEFT JOIN Reservasi USING(id_reservasi) LEFT JOIN Pasien USING(id_pasien)";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Riwayat Resep");
            model.addColumn("Nama Pasien");
            model.addColumn("Obat");

            while (resultSet.next()) {
                Object[] row = {resultSet.getInt("id_resep"), resultSet.getString("nama_pasien"), resultSet.getString("obat")};
                model.addRow(row);
            }

            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void loadObatDataFromDatabase() {
        tableObat.setModel(getObatDataFromDatabase());
        tableObat.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tableObat.getSelectedRow();
                    if (selectedRow != -1) {
                        String id = tableObat.getValueAt(selectedRow, 0).toString();
                        String nama = tableObat.getValueAt(selectedRow, 1).toString();
                        String jenis = tableObat.getValueAt(selectedRow, 2).toString();
                        String jumlah = tableObat.getValueAt(selectedRow, 3).toString();
                        tfObatID.setText(id);
                        tfObatNama.setText(nama);
                        tfObatJenis.setText(jenis);
                        tfObatJumlah.setText(jumlah);
                    }
                }
            }
        });
    }

    private DefaultTableModel getObatDataFromDatabase() {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM ObatDanAlatMedis";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Obat/Alat");
            model.addColumn("Nama");
            model.addColumn("Jenis");
            model.addColumn("Jumlah");

            while (resultSet.next()) {
                Object[] row = {resultSet.getInt("id_obat"), resultSet.getString("nama_obat"), resultSet.getString("jenis"), resultSet.getString("jumlah")};
                model.addRow(row);
            }

            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void loadRuangDataFromDatabase() {
        tableRuang.setModel(getRuangDataFromDatabase());
        tableRuang.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tableRuang.getSelectedRow();
                    if (selectedRow != -1) {
                        String id = tableRuang.getValueAt(selectedRow, 0).toString();
                        String nama = tableRuang.getValueAt(selectedRow, 1).toString();
                        String jenis = tableRuang.getValueAt(selectedRow, 2).toString();
                        String ketersediaan = tableRuang.getValueAt(selectedRow, 3).toString();
                        tfRuangID.setText(id);
                        tfRuangNama.setText(nama);
                        tfRuangJenis.setText(jenis);
                        tfRuangKetersediaan.setText(ketersediaan);
                    }
                }
            }
        });
    }

    private DefaultTableModel getRuangDataFromDatabase() {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM RuangPerawatan";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Ruang");
            model.addColumn("Nomor Kamar");
            model.addColumn("Jenis");
            model.addColumn("Ketersediaan");

            while (resultSet.next()) {
                Object[] row = {resultSet.getInt("id_ruang"), resultSet.getString("nomor_kamar"), resultSet.getString("jenis"), resultSet.getString("ketersediaan")};
                model.addRow(row);
            }

            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void loadReservasiDataFromDatabase() {
        tableReservasi.setModel(getReservasiDataFromDatabase());
        tableReservasi.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tableReservasi.getSelectedRow();
                    if (selectedRow != -1) {
                        String id = tableReservasi.getValueAt(selectedRow, 0).toString();
                        tfReservasiID.setText(id);
                    }
                }
            }
        });
    }

    private DefaultTableModel getReservasiDataFromDatabase() {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM Reservasi LEFT JOIN dokter using(id_dokter) LEFT JOIN pasien USING(id_pasien)";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Reservasi");
            model.addColumn("Nama Pasien");
            model.addColumn("Nama Dokter");
            model.addColumn("Asuransi");
            model.addColumn("Tanggal");
            model.addColumn("Waktu");
            model.addColumn("Status");

            while (resultSet.next()) {
                String status = resultSet.getString("status").equalsIgnoreCase("0") ? "Belum Terkonfirmasi" : "Terkonfirmasi";
                Object[] row = {resultSet.getInt("id_reservasi"), resultSet.getString("nama_pasien"), resultSet.getString("nama_dokter"), resultSet.getInt("asuransi"), resultSet.getString("tanggal"), resultSet.getString("waktu"), status};
                model.addRow(row);
            }

            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void loadCBReservasiDataFromDatabase() {
        DefaultComboBoxModel<String> comboBoxModel = getCBReservasiDataFromDatabase();
        cbReservasiID.setModel(comboBoxModel);
    }
    
    private void loadCBReservasiRWDataFromDatabase() {
        DefaultComboBoxModel<String> comboBoxModel = getCBReservasiDataFromDatabase();
        cbRiwayatResepID.setModel(comboBoxModel);
        
        DefaultComboBoxModel<String> comboBoxModel2 = getCBObatDataFromDatabase();
        cbRiwayatResepObat.setModel(comboBoxModel2);
    }
    
      private void loadCBReservasiCMDataFromDatabase() {
        DefaultComboBoxModel<String> comboBoxModel = getCBReservasiDataFromDatabase();
        cbCMID.setModel(comboBoxModel);
    }
    

    private DefaultComboBoxModel getCBReservasiDataFromDatabase() {

        try {
            Connection conn = new DBConnection().getConnection();
            String query = "SELECT * FROM Reservasi WHERE status != '0'";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            while (resultSet.next()) {
                String id_reservasi = resultSet.getString("id_reservasi");
                comboBoxModel.addElement(id_reservasi);
            }

            return comboBoxModel;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }
    
    private DefaultComboBoxModel getCBObatDataFromDatabase() {

        try {
            Connection conn = new DBConnection().getConnection();
            String query = "SELECT * FROM ObatDanAlatMedis WHERE jumlah > 0 AND jenis != 'alat'";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();

            while (resultSet.next()) {
                String obat = resultSet.getString("nama_obat");
                comboBoxModel.addElement(obat);
            }

            return comboBoxModel;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void loadPembayaranDataFromDatabase() {
        tablePembayaran.setModel(getPembayaranDataFromDatabase());
    }

    private DefaultTableModel getPembayaranDataFromDatabase() {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM Pembayaran as pb LEFT JOIN Reservasi as rv USING(id_reservasi) LEFT JOIN Pasien USING(id_pasien) LEFT JOIN Dokter USING(id_dokter)";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Pembayaran");
            model.addColumn("Nama Pasien");
            model.addColumn("Nama Dokter");
            model.addColumn("Jumlah");
            model.addColumn("Metode Pembayaran");
            model.addColumn("Tanggal");
            model.addColumn("Status");

            while (resultSet.next()) {
                String metode = resultSet.getString("metode_pembayaran") != null ? resultSet.getString("metode_pembayaran") : "-";
                String status = metode.equalsIgnoreCase("-") ? "Belum Bayar" : "Sudah Bayar";
                Object[] row = {
                    resultSet.getInt("id_pembayaran"),
                    resultSet.getString("nama_pasien"),
                    resultSet.getString("nama_dokter"),
                    resultSet.getInt("pb.jumlah"),
                    metode,
                    resultSet.getString("tanggal"),
                    status,};
                model.addRow(row);
            }

            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }
    
    
    private void loadCMDataFromDatabase() {
        tableCM.setModel(getCMDataFromDatabase());
    }

    private DefaultTableModel getCMDataFromDatabase() {

        try {
            conn = new DBConnection().getConnection();
            String query = "SELECT * FROM CatatanMedisElektronik as pb LEFT JOIN Reservasi as rv USING(id_reservasi) LEFT JOIN Pasien USING(id_pasien) LEFT JOIN Dokter USING(id_dokter)";
            PreparedStatement statement = conn.prepareStatement(query);
            ResultSet resultSet = statement.executeQuery();

            DefaultTableModel model = new DefaultTableModel();

            model.addColumn("ID Catatan Medis");
            model.addColumn("Nama Pasien");
            model.addColumn("Nama Dokter");
            model.addColumn("Hasil");
            model.addColumn("Diagnosis");
            model.addColumn("Pengobatan");
            model.addColumn("Tanggal");

            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getInt("id_catatan"),
                    resultSet.getString("nama_pasien"),
                    resultSet.getString("nama_dokter"),
                    resultSet.getString("hasil_pemeriksaan"),
                    resultSet.getString("diagnosis"),
                    resultSet.getString("pengobatan"),
                    resultSet.getString("tanggal"),
                };
                model.addRow(row);
            }

            return model;

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void resetObatTF() {
        this.tfObatID.setText("");
        this.tfObatNama.setText("");
        this.tfObatJenis.setText("");
        this.tfObatJumlah.setText("");
    }

    private void resetRuangTF() {
        this.tfRuangID.setText("");
        this.tfRuangNama.setText("");
        this.tfRuangJenis.setText("");
        this.tfRuangKetersediaan.setText("");
    }
    
    private void resetCM() {
        this.tfHasilPemeriksaan.setText("");
        this.tfDiagnosis.setText("");
        this.tfPengobatan.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuatRiwayatResep;
    private javax.swing.JButton btnBuatTagihan;
    private javax.swing.JButton btnCMSimpan;
    private javax.swing.JButton btnFilterLaporan;
    private javax.swing.JButton btnObatHapus;
    private javax.swing.JButton btnObatReset;
    private javax.swing.JButton btnObatSimpan;
    private javax.swing.JButton btnReservasiKonfirmasi;
    private javax.swing.JButton btnRuangHapus;
    private javax.swing.JButton btnRuangHapus1;
    private javax.swing.JButton btnRuangReset;
    private javax.swing.JButton btnRuangReset1;
    private javax.swing.JButton btnRuangSimpan;
    private javax.swing.JComboBox<String> cbCMID;
    private javax.swing.JComboBox<String> cbReservasiID;
    private javax.swing.JComboBox<String> cbRiwayatResepID;
    private javax.swing.JComboBox<String> cbRiwayatResepObat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel labelPemasukan;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JMenuItem menuHome;
    private javax.swing.JMenuItem menuLaporan;
    private javax.swing.JMenuItem menuLogout;
    private javax.swing.JMenuItem menuObat;
    private javax.swing.JMenuItem menuPasien;
    private javax.swing.JMenuItem menuPembayaran;
    private javax.swing.JMenuItem menuRekamMedis;
    private javax.swing.JMenuItem menuReservasi;
    private javax.swing.JMenuItem menuRiwayatResep;
    private javax.swing.JMenuItem menuRuang;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panelCatatanMedis;
    private javax.swing.JPanel panelLaporan;
    private javax.swing.JPanel panelReservasi;
    private javax.swing.JPanel panelRiwayatResep;
    private javax.swing.JPanel panelTagihan;
    private javax.swing.JTable tableCM;
    private javax.swing.JTable tableObat;
    private javax.swing.JTable tablePasien;
    private javax.swing.JTable tablePembayaran;
    private javax.swing.JTable tableReservasi;
    private javax.swing.JTable tableRiwayatResep;
    private javax.swing.JTable tableRuang;
    private javax.swing.JTable tableTransaksi;
    private javax.swing.JTextField tfDiagnosis;
    private javax.swing.JTextField tfEndDate;
    private javax.swing.JTextField tfHasilPemeriksaan;
    private javax.swing.JTextField tfObatID;
    private javax.swing.JTextField tfObatJenis;
    private javax.swing.JTextField tfObatJumlah;
    private javax.swing.JTextField tfObatNama;
    private javax.swing.JTextField tfPengobatan;
    private javax.swing.JTextField tfReservasiID;
    private javax.swing.JTextField tfRuangID;
    private javax.swing.JTextField tfRuangJenis;
    private javax.swing.JTextField tfRuangKetersediaan;
    private javax.swing.JTextField tfRuangNama;
    private javax.swing.JTextField tfStartDate;
    private javax.swing.JTextField tfTotalBayar;
    // End of variables declaration//GEN-END:variables
}
